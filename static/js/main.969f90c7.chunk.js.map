{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","class","href","className","this","props","totalCounters","Component","Counter","getBadgeClasses","formatCount","onClick","onIncrement","counter","onDelete","id","classes","value","Counters","onReset","counters","map","App","state","handleIncrement","index","indexOf","setState","handleReset","c","handleDelete","counterId","filter","Fragment","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAmBeA,E,4JAhBb,WACE,OACE,qBAAKC,MAAM,+BAAX,SACE,qBAAKA,MAAM,kBAAX,SACE,oBAAGA,MAAM,eAAeC,KAAK,IAA7B,mBACS,IACP,sBAAMC,UAAU,mCAAhB,SACGC,KAAKC,MAAMC,2B,GARLC,aC0DNC,E,4JA3Cb,WAAU,IAAD,OACP,OACE,gCACE,sBAAML,UAAWC,KAAKK,kBAAtB,SAA0CL,KAAKM,gBAC/C,wBACEC,QAAS,kBAAM,EAAKN,MAAMO,YAAY,EAAKP,MAAMQ,UACjDV,UAAU,2BAFZ,uBAMA,wBACEQ,QAAS,kBAAM,EAAKN,MAAMS,SAAS,EAAKT,MAAMQ,QAAQE,KACtDZ,UAAU,4BAFZ,yB,6BAqBN,WACE,IAAIa,EAAU,oBAEd,OADAA,GAAwC,IAA7BZ,KAAKC,MAAMQ,QAAQI,MAAc,UAAY,Y,yBAI1D,WAAe,IACLA,EAAUb,KAAKC,MAAMQ,QAArBI,MACR,OAAiB,IAAVA,EAAc,OAASA,M,GAtDZV,aCwBPW,E,4JAtBb,WAAU,IAAD,OACP,OACE,gCACE,wBACEP,QAASP,KAAKC,MAAMc,QACpBhB,UAAU,6BAFZ,mBAMCC,KAAKC,MAAMe,SAASC,KAAI,SAACR,GAAD,OACvB,cAAC,EAAD,CAEEC,SAAU,EAAKT,MAAMS,SACrBF,YAAa,EAAKP,MAAMO,YACxBC,QAASA,GAHJA,EAAQE,c,GAZFR,aCgDRe,E,4MA9CbC,MAAQ,CACNH,SAAU,CACR,CAAEL,GAAI,EAAGE,MAAO,GAChB,CAAEF,GAAI,EAAGE,MAAO,GAChB,CAAEF,GAAI,EAAGE,MAAO,GAChB,CAAEF,GAAI,EAAGE,MAAO,K,EAGpBO,gBAAkB,SAACX,GACjB,IAAMO,EAAQ,YAAO,EAAKG,MAAMH,UAC1BK,EAAQL,EAASM,QAAQb,GAC/BO,EAASK,GAAT,eAAuBZ,GACvBO,EAASK,GAAOR,QAChB,EAAKU,SAAS,CAAEP,c,EAGlBQ,YAAc,WACZ,IAAMR,EAAW,EAAKG,MAAMH,SAASC,KAAI,SAACQ,GAExC,OADAA,EAAEZ,MAAQ,EACHY,KAET,EAAKF,SAAS,CAAEP,c,EAGlBU,aAAe,SAACC,GACd,IAAMX,EAAW,EAAKG,MAAMH,SAASY,QAAO,SAACH,GAAD,OAAOA,EAAEd,KAAOgB,KAC5D,EAAKJ,SAAS,CAAEP,c,4CAElB,WACE,OAAQ,eAAC,IAAMa,SAAP,WACN,cAAC,EAAD,CAAS3B,cAAeF,KAAKmB,MAAMH,SAASY,QAAO,SAAAH,GAAC,OAAEA,EAAEZ,MAAM,KAAGiB,SACjE,sBAAM/B,UAAU,YAAhB,SACH,cAAC,EAAD,CACAiB,SAAYhB,KAAKmB,MAAMH,SACvBD,QAAWf,KAAKwB,YAChBhB,YAAeR,KAAKoB,gBACpBV,SAAYV,KAAK0B,wB,GArCFvB,aCQH4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.969f90c7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav class=\"navbar navbar-light bg-light\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\" href=\"#\">\r\n            Navbar{\" \"}\r\n            <span className=\"badge badge-pill badge-secondary\">\r\n              {this.props.totalCounters}\r\n            </span>\r\n          </a>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  // state = {\r\n  //   count: this.props.counter.value,\r\n  // };\r\n\r\n  // constructor() {\r\n  //   super();\r\n  //   this.handleIncrement = this.handleIncrement.bind(this);\r\n  // }\r\n\r\n  // handleIncrement = () => {\r\n  //   // console.log(product);\r\n  //   this.setState({ count: this.state.count + 1 });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n        <button\r\n          onClick={() => this.props.onIncrement(this.props.counter)}\r\n          className=\"btn btn-secondary btn-sm\"\r\n        >\r\n          Increment\r\n        </button>\r\n        <button\r\n          onClick={() => this.props.onDelete(this.props.counter.id)}\r\n          className=\"btn btn-danger btn-sm m-2\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // renderTags() {\r\n  //   if (this.state.tags.length == 0) return <p>There are no tags!</p>;\r\n  //   return (\r\n  //     <ul>\r\n  //       {this.state.tags.map((tag) => (\r\n  //         <li key={tag}>{tag}</li>\r\n  //       ))}\r\n  //     </ul>\r\n  //   );\r\n  // }\r\n\r\n  getBadgeClasses() {\r\n    let classes = \"badge  m-2 badge-\";\r\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  formatCount() {\r\n    const { value } = this.props.counter;\r\n    return value === 0 ? \"Zero\" : value;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\n\r\nclass Counters extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={this.props.onReset}\r\n          className=\"btn btn-primary btn-sm m-2\"\r\n        >\r\n          Reset\r\n        </button>\r\n        {this.props.counters.map((counter) => (\r\n          <Counter\r\n            key={counter.id}\r\n            onDelete={this.props.onDelete}\r\n            onIncrement={this.props.onIncrement}\r\n            counter={counter}\r\n          ></Counter>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counters;\r\n","import React, { Component } from 'react';\nimport Navbar from './components/navbar';\nimport Counters from './components/counters';\n\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 1 },\n      { id: 2, value: 2 },\n      { id: 3, value: 3 },\n      { id: 4, value: 4 },\n    ],\n  };\n  handleIncrement = (counter) => {\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].value++;\n    this.setState({ counters });\n  };\n\n  handleReset = () => {\n    const counters = this.state.counters.map((c) => {\n      c.value = 0;\n      return c;\n    });\n    this.setState({ counters });\n  };\n\n  handleDelete = (counterId) => {\n    const counters = this.state.counters.filter((c) => c.id !== counterId);\n    this.setState({ counters });\n  };\n  render() { \n    return (<React.Fragment> \n      <Navbar  totalCounters={this.state.counters.filter(c=>c.value>0).length}/>\n      <main className=\"container\">\n   <Counters\n   counters = {this.state.counters}\n   onReset = {this.handleReset}\n   onIncrement = {this.handleIncrement}\n   onDelete = {this.handleDelete}\n   />\n      </main>\n\n      </React.Fragment> );\n  }\n}\n\n\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}